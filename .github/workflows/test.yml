name: Test Windows

on:
    push:
        branches:
            - main
    workflow_dispatch:
        inputs:
            vscodeCommit:
                description: "VS Code commit hash to test"
                required: true
                default: "cb0c47c0cfaad0757385834bd89d410c78a856c0"
                type: string

jobs:
    test:
        strategy:
            matrix:
                # windows-11-arm
                os: [windows-latest, windows-11-arm]
                target: [user-installer, system-installer, archive]
                vscodeCommit:
                    [
                        "${{ github.event.inputs.vscodeCommit || 'cb0c47c0cfaad0757385834bd89d410c78a856c0' }}",
                    ]

        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "24"

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "9.x"

            - name: Install FFmpeg
              run: |
                  Write-Host "Installing FFmpeg via Chocolatey..."
                  choco install ffmpeg -y
                  Write-Host "FFmpeg installed successfully"
                  ffmpeg -version
              shell: pwsh

            - name: Install dependencies
              run: npm install

            - name: Run the application
              run: npm run run -- --target=${{ matrix.target }} --vscode-commit=${{ matrix.vscodeCommit }}

            - name: Upload output files
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.os }}-${{ matrix.target }}-output
                  path: ./output/

    merge-results:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ./all-outputs

            - name: Merge outputs into single directory
              run: |
                  mkdir -p ./merged-output
                  for artifact_dir in ./all-outputs/*/; do
                      artifact_name=$(basename "$artifact_dir")
                      # Remove the "-output" suffix from artifact name to get the prefix
                      prefix=${artifact_name%-output}
                      for file in "$artifact_dir"*; do
                          if [ -f "$file" ]; then
                              filename=$(basename "$file")
                              cp "$file" "./merged-output/${prefix}-${filename}"
                          fi
                      done
                  done
                  ls -la ./merged-output/

            - name: Upload merged result
              uses: actions/upload-artifact@v4
              with:
                  name: result
                  path: ./merged-output/
